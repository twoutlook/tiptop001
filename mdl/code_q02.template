{<section id="${app_id}.global" >}
#應用 q02 樣板自動產生(Version:42)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point

IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_${detail_var_title} RECORD
       #statepic       LIKE type_t.chr1,
       ${detail_sel_define}
       ${detail_fields_define} 
       END RECORD
#pages - Start -
PRIVATE TYPE type_${detail_var_title${page}} RECORD
       ${detail_fields_define${page}}
       END RECORD
#pages -  End  -
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_master                     type_${detail_var_title}
DEFINE g_master_t                   type_${detail_var_title}
DEFINE ${detail_var_title}          DYNAMIC ARRAY OF type_${detail_var_title}
DEFINE ${detail_var_title}_t        type_${detail_var_title}
#pages - Start -
DEFINE ${detail_var_title${page}}   DYNAMIC ARRAY OF type_${detail_var_title${page}}
DEFINE ${detail_var_title${page}}_t type_${detail_var_title${page}}
#pages -  End  -
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
DEFINE g_detail_idx         LIKE type_t.num10
DEFINE g_detail_idx2        LIKE type_t.num10
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
DEFINE g_tot_cnt            LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page        LIKE type_t.num10             #每頁筆數
DEFINE g_current_row_tot    LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_act_list      STRING                        #分頁ACTION清單
DEFINE g_page_start_num     LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num       LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_wc_filter_table    STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
#tables - Start -
DEFINE g_wc_table${table}   STRING
DEFINE g_wc_filter_table${table}    STRING
DEFINE g_detail_page_action${table} STRING
DEFINE g_pagestart${table}          LIKE type_t.num10
#tables -  End  -
#tables_d2 - Start -
DEFINE g_wc2_table${table}   STRING
DEFINE g_wc2_filter_table${table}    STRING
DEFINE g_detail2_page_action${table} STRING
#tables -  End  -
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
##end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="${app_id}.main" >}
 ${general_main_function}
{</section>}
 
{<section id="${app_id}.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION ${general_prefix}_init()
   #add-point:init段define-客製 name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   {<point name="init.before_function" />}
   #end add-point
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   ${general_define_combo_stus}
   ${general_define_combo}
   
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init" />}
   #end add-point
 
   CALL ${general_prefix}_default_search()  
END FUNCTION
{</section>}
 
 
{<section id="${app_id}.default_search" >}
PRIVATE FUNCTION ${general_prefix}_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
 
   #add-point:default_search段開始前 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point
 
   ${default_search_field}
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段開始後 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="${app_id}.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION ${general_prefix}_ui_dialog()
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   DEFINE ls_wc      STRING
   DEFINE li_idx     LIKE type_t.num10
   DEFINE lc_action_choice_old     STRING
   DEFINE lc_current_row           LIKE type_t.num10
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
                     prog       STRING,
                     actionid   STRING,
                     background LIKE type_t.chr1,
                     param      DYNAMIC ARRAY OF STRING
                     END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   {<point name="ui_dialog.before_function" />}
   #end add-point
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
         
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   LET g_detail_page_action = "detail_first"
   LET g_pagestart = 1
   LET g_current_row_tot = 1
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   IF NOT cl_null(g_wc) AND g_wc != " 1=2" THEN
      LET g_detail_idx = 1
      LET g_detail_idx2 = 1
      CALL ${general_prefix}_b_fill()
   ELSE
      CALL ${general_prefix}_query()
   END IF
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL ${detail_var_title}.clear()
         #pages - Start -
         CALL ${detail_var_title${page}}.clear()
         #pages -  End  -
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 1
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL ${general_prefix}_init()
      END IF
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY ${detail_var_title} TO ${sr_name}.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("${sr_name}")
               LET l_ac = g_detail_idx
 
               #為避免按上下筆影響執行效能，所以有作一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL ${general_prefix}_fetch()
               LET g_action_choice = lc_action_choice_old
               LET g_master_idx = l_ac
               CALL ${general_prefix}_detail_action_trans()
               #add-point:input段before row name="input.body.before_row"
               {<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            ${detail_saction_choice1}
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            {<point name="ui_dialog.body.page1.action"/>}
            #end add-point
 
         END DISPLAY
      
         #pages_m - Start -
         DISPLAY ARRAY ${detail_var_title${page}} TO ${sr_name${page}}.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               LET g_current_page = ${page}
            
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("${sr_name${page}}")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY ${detail_var_title${page}}.getLength() TO FORMONLY.h_count
               CALL ${general_prefix}_fetch()
               LET g_master_idx = l_ac
               #add-point:input段before row name="input.body${page_id}.before_row"
               {<point name="input.body${page_id}.before_row"/>}
               #end add-point  
 
            #自訂ACTION(detail_show,page_${page})
            ${detail_saction_choice${page}}
 
            #add-point:page${page}自定義行為 name="ui_dialog.body${page_id}.action"
            {<point name="ui_dialog.body${page_id}.action"/>}
            #end add-point
 
         END DISPLAY
         #pages -  End  -
         
         #pages_d - Start -
         DISPLAY ARRAY ${detail_var_title${page}} TO ${sr_name${page}}.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               LET g_current_page = ${page}
            
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("${sr_name${page}}")
               LET l_ac = g_detail_idx2
               DISPLAY g_detail_idx2 TO FORMONLY.idx
               DISPLAY ${detail_var_title${page}}.getLength() TO FORMONLY.cnt
               #add-point:input段before row name="input.body${page_id}.before_row"
               {<point name="input.body${page_id}.before_row"/>}
               #end add-point 
 
            #自訂ACTION(detail_show,page_${page})
            ${detail_saction_choice${page}}
 
            #add-point:page${page}自定義行為 name="ui_dialog.body${page_id}.action"
            {<point name="ui_dialog.body${page_id}.action"/>}
            #end add-point
 
         END DISPLAY
         #pages -  End  -
      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("${sr_name}", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL ${general_prefix}_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
         ${general_action_call}
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL ${general_prefix}_filter()
            #add-point:ON ACTION filter name="menu.filter"
            {<point name="menu.filter" />}
            #END add-point
 
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
 
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL ${general_prefix}_b_fill()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(${detail_var_title})
               LET g_export_id[1]   = "${sr_name}"
               #pages - Start -
               LET g_export_node[${page}] = base.typeInfo.create(${detail_var_title${page}})
               LET g_export_id[${page}]   = "${sr_name${page}}"
               #pages -  End  -
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL ${general_prefix}_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL ${general_prefix}_b_fill()
 
         ON ACTION detail_next                #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL ${general_prefix}_b_fill()
 
         ON ACTION detail_last                #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL ${general_prefix}_b_fill()
 
         ${general_sel_action}
         ${general_menu_signature}
 
         #add-point:ui_dialog段自定義action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         {<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         {<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
{</section>}
 
 
{<section id="${app_id}.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION ${general_prefix}_query()
   #add-point:query段define-客製 name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_wc2     LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point 
   
   #add-point:FUNCTION前置處理 name="query.before_function"
   {<point name="query.before_function" />}
   #end add-point
 
   LET INT_FLAG = 0
   CLEAR FORM
   CALL ${detail_var_title}.clear()
   #pages - Start -
   CALL ${detail_var_title${page}}.clear()
   #pages -  End  -
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_wc_filter = " 1=1"
   LET g_detail_page_action = ""
   LET g_pagestart = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET ls_wc2 = g_wc2
   LET g_master_idx = l_ac
 
   ${detail_hyper_bef_construct}
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON ${detail_tbl_fields_qbe}
           FROM ${detail_tbl_srfield_all}
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       ${detail_commons_ctrlp}
         
       #單身一般欄位開窗相關處理
       ${detail_tbl_fields_ctrlp}   
       
      END CONSTRUCT
      
      #tables - Start - 
      CONSTRUCT g_wc_table${table} ON ${detail_tbl_fields_qbe${table}}
           FROM ${detail_tbl_srfield_all${table}}
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head${table}.before_construct"
            {<point name="cs.head${table}.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table ${table})
       ${detail_commons_ctrlp${table}}
       
       #單身一般欄位開窗相關處理       
       ${detail_tbl_fields_ctrlp${table}}   
       
      END CONSTRUCT
      #tables -  End  -
      
      #tables_d2 - Start - 
      CONSTRUCT g_wc2_table${table} ON ${detail_tbl_fields_qbe${table}}
           FROM ${detail_tbl_srfield_all${table}}
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body${table}.before_construct"
            {<point name="cs.body${table}.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table ${table})
       ${detail_commons_ctrlp${table}}
       
       #單身一般欄位開窗相關處理       
       ${detail_tbl_fields_ctrlp${table}}   
       
      END CONSTRUCT
      #tables -  End  -
  
      #add-point:query段more_construct name="query.more_construct"
      {<point name="query.more_construct"/>}
      #end add-point 
 
      ON ACTION accept
         #add-point:ON ACTION accept name="query.accept"
         {<point name="query.accept"/>}
         #end add-point
 
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
 
      #add-point:query段查詢方案相關ACTION設定前 name="query.set_qbe_action_before"
      {<point name="query.set_qbe_action_before" mark="Y"/>}
      #end add-point 
 
      ON ACTION qbeclear   # 條件清除
         CLEAR FORM
         #add-point:條件清除後 name="query.qbeclear"
         {<point name="query.qbeclear"/>}
         #end add-point 
 
      #add-point:query段查詢方案相關ACTION設定後 name="query.set_qbe_action_after"
      {<point name="query.set_qbe_action_after"/>}
      #end add-point 
 
   END DIALOG
 
   ${detail_hyper_aft_construct}
 
   LET g_wc = g_wc_table 
   #tables - Start - 
   IF NOT cl_null(g_wc_table${table}) AND g_wc_table${table} <> " 1=1" THEN
      LET g_wc = g_wc , " AND ", g_wc_table${table}
   END IF
   #tables -  End  - 
   #tables_d2 - Start - 
   IF NOT cl_null(g_wc2_table${table}) AND g_wc2_table${table} <> " 1=1" THEN
      LET g_wc = g_wc, " AND ", g_wc2_table${table}
   END IF
   #tables -  End  - 
   
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF

   #tables_d2 - Start - 
   IF NOT cl_null(g_wc2_table${table}) AND g_wc2_table${table} <> " 1=1" THEN
      LET g_wc2 = g_wc2, " AND ", g_wc2_table${table}
   END IF
   #tables -  End  - 
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = " 1=2"
      LET g_wc2 = " 1=1"
      LET g_wc_filter = g_wc_filter_t
      RETURN
   ELSE
      LET g_master_idx = 1
   END IF
        
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL ${general_prefix}_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = -100 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
{</section>}
 
{<section id="${app_id}.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ${general_prefix}_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE ls_wc2          STRING
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter, cl_sql_auth_filter()   #(ver:40) add cl_sql_auth_filter()

   LET ls_sql_rank = "${detail_fill_page_sql_pre}",
                     #tables - Start - 
                     "${detail_join_by_table${table}}",
                     #tables -  End  -
                     #tables_d2 - Start - 
                     "${detail_join_by_table${table}}",
                     #tables -  End  -
                     "${detail_append_join_b_fill}",
                     "${detail_fill_sql_post} AND ", ls_wc
    
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("${detail_tbl_name}"),
                     " ORDER BY ${detail_field_order_by_tbl}"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   {<point name="b_fill.rank_sql_after"/>}
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql
   ${detail_cnt_using_ent}
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   {<point name="b_fill.rank_sql_after_count"/>}
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "${detail_fill_sql_field}",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE ${general_prefix}_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR ${general_prefix}_pb
   
   ${detail_using_ent}
 
   CALL ${detail_var_title}.clear()
   #pages_m - Start -
   CALL ${detail_var_title${page}}.clear()   
   #pages -  End  -
   #add-point:陣列清空 name="b_fill.array_clear"
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1   
 
   FOREACH b_fill_curs INTO ${detail_vars_all_by_tbl}
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #LET ${detail_var_title}[l_ac].statepic = cl_get_actipic(${detail_var_title}[l_ac].statepic)
 
      ${detail_hyper_b_fill}
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL ${general_prefix}_detail_show("'1'")      
 
      CALL ${general_prefix}_${detail_tbl_name}_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
      
   END FOREACH
   LET g_error_show = 0
   
   #tables - Start -
   LET g_sql = "${detail_fill_sql_pre${table}}",    
               "${detail_append_join_b_fill${table}}",
               "${detail_fill_sql_post${table}}"  ,
               " AND ${detail_by_tbl${table}_field_pk01_by_tbl} = ? "
               #detail_keys - Start -
               " AND ${detail_by_tbl${table}_field_pk${key}_by_tbl} = ? "
               #keys -  End  -
 
   IF NOT cl_null(g_wc_table${table}) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc_table${table} CLIPPED
   END IF
   
   LET g_sql = g_sql, " ORDER BY ${detail_field_order_by_tbl${table}}"
 
   PREPARE ${general_prefix}_pb${table} FROM g_sql
   DECLARE b_fill_curs${table} CURSOR FOR ${general_prefix}_pb${table}
   
   FOR l_ac = 1 TO ${detail_var_title}.getLength()
      OPEN b_fill_curs${table} USING ${detail_var_append}${detail_var_pk01}
                                     #detail_keys - Start -
                                     ,${detail_var_pk${key}}
                                     #keys -  End  -
      #(ver:41) ---start---
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "OPEN FETCH:",SQLERRMESSAGE
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.popup = TRUE 
         CALL cl_err()

         CALL ${detail_var_title}.clear()
         #pages - Start -
         CALL ${detail_var_title${page}}.clear()
         #pages -  End  -
         RETURN
      END IF
      #(ver:41) --- end ---
      FETCH b_fill_curs${table} INTO ${detail_vars_all_by_tbl${table}}
      IF SQLCA.SQLCODE THEN
         IF SQLCA.SQLCODE = 100 THEN 
            ${detail_fields_default_by_tbl${table}}
            #補足缺少的資料
            #add-point:b_fill段補充insert前 name="b_fill.before_insert"
            {<point name="b_fill.before_insert" mark="Y"/>}
            #end add-point
            #(ver:41) ---mark start---
           #INSERT INTO ${detail_name_by_table${table}}
           #            (${detail_field_append_by_tbl${table}}
           #             ${detail_field_pks_by_tbl${table}}
           #             ${detail_field_others${table}}) 
           #      VALUES(${detail_var_append_by_tbl${table}}
           #             ${detail_var_pks}
           #             ${detail_var_others${table}})
            #(ver:41) --- mark end ---
            #add-point:b_fill段補充insert後 name="b_fill.before_after"
            {<point name="b_fill.before_after"/>}
            #end add-point
         ELSE
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = ${detail_var_pk01} 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
 
         END IF
      END IF
   
      CALL ${general_prefix}_detail_show("'${table}'")      
 
      #add-point:b_fill段資料填充${table} name="b_fill.fill${table}"
      {<point name="b_fill.fill${table}"/>}
      #end add-point
      
   END FOR
   #tables -  End  -
   
   CALL ${detail_var_title}.deleteElement(${detail_var_title}.getLength())   
   #pages_m - Start -
   CALL ${detail_var_title${page}}.deleteElement(${detail_var_title${page}}.getLength())
   #pages -  End  - 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = ${detail_var_title}.getLength()
#  DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE ${general_prefix}_pb
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL ${general_prefix}_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL ${general_prefix}_detail_action_trans()
 
   IF ${detail_var_title}.getLength() > 0 THEN
      LET l_ac = 1
      CALL ${general_prefix}_fetch()
   END IF
   
   ${detail_display_condition}
 
   #add-point:b_fill段結束前 name="b_fill.after"
   {<point name="b_fill.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="${app_id}.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION ${general_prefix}_fetch()
   #add-point:fetch段define-客製 name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point
   
   #add-point:FUNCTION前置處理 name="fetch.before_function"
   {<point name="fetch.before_function" />}
   #end add-point
 
   #pages_d - Start -
   CALL ${detail_var_title${page}}.clear()
   #pages -  End  -
   #add-point:陣列清空 name="fetch.array_clear"
   {<point name="fetch.array_clear" />}
   #end add-point
   
   LET li_ac = l_ac 
   
   #tables_d2 - Start -
   #為避免影響執行效能，若是按上下筆就不重組SQL
   IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN
      LET g_sql = "${detail_fill_sql_pre${table}}",    
                  "${detail_append_join_b_fill${table}}",
                  "${detail_fill_sql_post${table}}"
  
      IF NOT cl_null(g_wc2_table${table}) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table${table} CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY ${detail_field_order_by_tbl${table}}" 
                         
      #add-point:單身填充前 name="fetch.before_fill${table}"
      {<point name="fetch.before_fill${table}" />}
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料   
      PREPARE ${general_prefix}_pb${table} FROM g_sql
      DECLARE b_fill_curs${table} CURSOR FOR ${general_prefix}_pb${table}
   END IF

#(ver:42) mark ---start---
#  OPEN b_fill_curs${table} USING ${detail_var_append}${detail_var_pk01}
#                                 #detail_keys - Start -
#                                 ,${detail_var_pk${key}}
#                                 #keys -  End  -
#(ver:42) mark --- end ---

   LET l_ac = 1
   FOREACH b_fill_curs${table} USING ${detail_var_append}${detail_var_pk01}   #(ver:42)
                                     #detail_keys - Start -    #(ver:42)
                                     ,${detail_var_pk${key}}   #(ver:42)
                                     #keys -  End  -           #(ver:42)
        INTO ${detail_vars_all_by_tbl${table}}   #(ver:42)
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      ${detail_hyper_b_fill${table}}
 
      #add-point:b_fill段資料填充 name="fetch.fill${table}"
      {<point name="fetch.fill${table}"/>}
      #end add-point
      
      CALL ${general_prefix}_detail_show("'${table}'")      
 
      CALL ${general_prefix}_${detail_tbl_name_by_tbl${table}}_mask()
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
      
   END FOREACH
   #tables -  End  -
   
   #add-point:單身填充後 name="fetch.after_fill"
   {<point name="fetch.after_fill" />}
   #end add-point 
   
   #pages_d - Start -
   CALL ${detail_var_title${page}}.deleteElement(${detail_var_title${page}}.getLength())   
 
   #單身總筆數顯示
   LET g_detail_cnt2 = ${detail_var_title${page}}.getLength()
   DISPLAY g_detail_cnt2 TO FORMONLY.cnt
   IF g_detail_cnt2 > 0 THEN
      LET g_detail_idx2 = 1
      DISPLAY g_detail_idx2 TO FORMONLY.idx
   ELSE
      LET g_detail_idx2 = 0
      DISPLAY ' ' TO FORMONLY.idx
   END IF
   #pages -  End  -
   #add-point:陣列筆數調整 name="fetch.array_deleteElement"
   {<point name="fetch.array_deleteElement" />}
   #end add-point
 
   LET l_ac = li_ac
   
END FUNCTION
{</section>}
 
{<section id="${app_id}.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION ${general_prefix}_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   ${general_display_site}
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      ${detail_commons_ref}
 
      #add-point:show段單身reference name="detail_show.body.reference"
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
   
   #pages - Start -
   IF ps_page.getIndexOf("'${page}'",1) > 0 THEN
      #帶出公用欄位reference值page${page}
      ${detail_commons_ref${page}}
 
      #add-point:show段單身reference name="detail_show.body${page_id}.reference"
      {<point name="detail_show.body${page_id}.reference"/>}
      #end add-point
   END IF
   #pages -  End  -
 
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="${app_id}.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION ${general_prefix}_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point
   
   #add-point:FUNCTION前置處理 name="filter.before_function"
   {<point name="filter.before_function" />}
   #end add-point
 
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON ${detail_tbl_fields_qbe}
                          FROM ${detail_tbl_srfield_all}
 
         BEFORE CONSTRUCT
         ${detail_display_info}
 
         #單身公用欄位開窗相關處理
         ${detail_commons_ctrlp}
           
         #單身一般欄位開窗相關處理
         ${detail_tbl_fields_filter_ctrlp}   
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
      LET g_wc_filter_t = g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
   ${detail_display_condition}
    
   CALL ${general_prefix}_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
{</section>}
    
{<section id="${app_id}.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION ${general_prefix}_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   {<point name="filter_parser.before_function" />}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
{</section>}
 
{<section id="${app_id}.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION ${general_prefix}_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   {<point name="filter_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   {<point name="filter_show.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   {<point name="filter_show.before_function" />}
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ${general_prefix}_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
{</section>}
 
{<section id="${app_id}.insert" >}
#+ insert
PRIVATE FUNCTION ${general_prefix}_insert()
   #add-point:insert段define-客製 name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:insert段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control name="insert.control"
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="${app_id}.modify" >}
#+ modify
PRIVATE FUNCTION ${general_prefix}_modify()
   #add-point:modify段define-客製 name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:modify段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control name="modify.control"
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
{<section id="${app_id}.reproduce" >}
#+ reproduce
PRIVATE FUNCTION ${general_prefix}_reproduce()
   #add-point:reproduce段define-客製 name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:reproduce段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control name="reproduce.control"
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
{<section id="${app_id}.delete" >}
#+ delete
PRIVATE FUNCTION ${general_prefix}_delete()
   #add-point:delete段define-客製 name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:delete段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control name="delete.control"
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
 ${general_hyperlink_func}
 
{<section id="${app_id}.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION ${general_prefix}_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   {<point name="detail_action_trans.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   {<point name="detail_action_trans.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   {<point name="detail_action_trans.before_function" />}
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION
{</section>}
 
{<section id="${app_id}.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION ${general_prefix}_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="deatil_index_setting.define_customerization"
   {<point name="deatil_index_setting.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   {<point name="detail_index_setting.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   {<point name="detail_index_setting.before_function" />}
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF ${detail_var_title}.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > ${detail_var_title}.getLength() AND ${detail_var_title}.getLength() > 0
            LET g_detail_idx = ${detail_var_title}.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > ${detail_var_title}.getLength() THEN
               LET g_detail_idx = ${detail_var_title}.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION
{</section>}
 
{<section id="${app_id}.mask_functions" >}
 ${general_mask_funcs}
{</section>}
 
{<section id="${app_id}.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}

