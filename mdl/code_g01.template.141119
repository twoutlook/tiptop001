{<section id="${component_name}.global" readonly="Y" >}
#報表 g01 樣板自動產生(Version:1)

IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point

SCHEMA ds

GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global

#報表 type 宣告
#rep - Start -
PRIVATE TYPE sr${key}_r RECORD
${rep_fields_define${key}}
END RECORD
#rep - End -
DEFINE tm RECORD
${tm_fields_define_str}
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用

#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
{</section>}

{<section id="${component_name}.main" readonly="Y" >}
PUBLIC FUNCTION ${component_name}(${arg_name})
${componet_define_str}
#add-point:init段define
{<point name="component_name.define"/>}
#end add-point

   ${componet_init_str}
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log

   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "${component_name}"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF

   #主報表select子句準備
   CALL ${component_name}_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   

   #將資料存入array
   CALL ${component_name}_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   

   #將資料印出
   CALL ${component_name}_rep_data()

END FUNCTION
{</section>}

{<section id="${component_name}.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION ${component_name}_sel_prep()
   #add-point:sel_prep段define
   {<point name="sel_prep.define"/>}
   #end add-point

   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   ${g_select_query}

   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
   ${g_from_query}

   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
   ${g_where_query} ,tm.wc CLIPPED 

   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
   ${g_order_query}

   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("${maintable}")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 

   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE ${component_name}_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE ${component_name}_curs CURSOR FOR ${component_name}_prepare

END FUNCTION
{</section>}

{<section id="${component_name}.ins_data" readonly="Y" >}
PRIVATE FUNCTION ${component_name}_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD ${master_fields_define} END RECORD
   DEFINE l_cnt           INTEGER
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point

    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point

    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH ${component_name}_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF

       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point

       #add-point:ins_data段before_arr
       {<point name="ins_data.before.save"/>}
       #end add-point

       #set rep array value
       ${set_sr_rep_str}

       #add-point:ins_data段after_arr
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)

    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
{</section>}

{<section id="${component_name}.rep_data" readonly="Y" >}
PRIVATE FUNCTION ${component_name}_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER

    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE               
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT ${component_name}_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT ${component_name}_rep(sr[l_i].*)
          END FOR
          FINISH REPORT ${component_name}_rep
       END IF
       IF INT_FLAG = TRUE THEN
          LET INT_FLAG = FALSE
          EXIT WHILE
       END IF
    END WHILE
    CALL cl_gr_close_report()
END FUNCTION
{</section>}

{<section id="${component_name}.rep" readonly="Y" >}
PRIVATE REPORT ${component_name}_rep(sr1)
${rep_record_define}
${subrep_var_define}
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING
#add-point:rep段define
{<point name="rep.define"/>}
#end add-point

    #add-point:rep段ORDER_before
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER ${rep_order_type} BY ${rep_order_var1}
    #add-point:rep段ORDER_after
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*

          #讀取beforeGrup子樣板+子報表樣板
${rep_b_group_str}

       ON EVERY ROW
          #add-point:rep.everyrow.before
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before

          #單身前備註
  ${everyrow_before_subrep}
          #add-point:rep.everyrow.beforerow
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*

          #add-point:rep.everyrow.afterrow
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow

          #單身後備註
  ${everyrow_after_subrep}
          #add-point:rep.everyrow.after
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        

          #讀取afterGrup子樣板+子報表樣板
${rep_a_group_str}
       ON LAST ROW
            #add-point:rep.lastrow.before  
            {<point name="rep.lastrow.before"/>}        
            #edn add point :rep.lastrow.before

            #add-point:rep.lastrow.after
            {<point name="rep.lastrow.after"/>}
            #edn add point :rep.lastrow.after
END REPORT
{</section>}

{<section id="${component_name}.subrep_str" readonly="Y" >}
#讀取子報表樣板
${subrep_str} 
{</section>}

{<section id="${component_name}.other_function" >}
{<point name="other.function"/>}
{</section>}

{<section id="${component_name}.other_report" >}
{<point name="other.report"/>}
{</section>}
